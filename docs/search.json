[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Prognozēšanas metodes",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites.\n\n100+100+100\n\n[1] 300"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "LRKPM.html",
    "href": "LRKPM.html",
    "title": "LR klasiskās prognozēšanas metodes",
    "section": "",
    "text": "Autors : Kirils Volobujevs\n\n\nVienas stundas darbaspēka izmaksas pa darbības veidiem (eiro) 2005 - 2023\n\n\n\n\n\n\n\n\n\nGads\nIzmaksas\n\n\n\n\n2005\n2.19\n\n\n2006\n2.75\n\n\n2007\n3.53\n\n\n2008\n4.38\n\n\n2009\n4.28\n\n\n2010\n4.14\n\n\n2011\n4.34\n\n\n2012\n4.45\n\n\n2013\n4.78\n\n\n2014\n5.23\n\n\n2015\n5.83\n\n\n2016\n6.23\n\n\n2017\n6.65\n\n\n2018\n7.58\n\n\n2019\n8.11\n\n\n2020\n8.60\n\n\n2021\n8.75\n\n\n2022\n9.48\n\n\n2023\n10.48\n\n\n\n\n\n \n\n\n\n\n\n\n\n[1] \"Vidējā alga : 5.883 eiro/st\"\n\n\n \n\n\n[1] \"Standartnovirze: 2.371\"\n\n\n\n\n\n\nPārbaudot visus lineārās regresijas modeļus, ir jāsaprot, cik labi modelis atbilst datiem – jo lielāks ir determinācijas koeficients (R²), jo labāk regresijas modelis atbilst tālākajai analīzei.\n\n\n\n\n\nModelis\nFormula\nR²\n\n\n\n\nLineārais\ny = -823.6 + 0.41*x\n0.96\n\n\nLogaritmiskais\ny = -6303.54 + 829.33*log(x)\n0.96\n\n\nEksponenciālais\ny = exp(-147.28 + 0.07*x)\n0.95\n\n\nPakāpes\ny = exp(-1131.69 + 148.97*log(x))\n0.95\n\n\n\n\n\nKā mēs neredzam būtisku atšķirību starp lineārā un logaritmiskā modeļa determinācijas koeficientiem, es izvēlējos lineāro modeli tālākai prognozēšanai.\n\n\n\nPrognozēšanas intervāls ir konservatīvi - 5 gadi.\n\n\n\n\n\nGads\nIzmaksas\nDatu tips\nPrognoze\nLCL\nUCL\n\n\n\n\n2005\n2.19\nVēsturiskie\nNA\nNA\nNA\n\n\n2006\n2.75\nVēsturiskie\nNA\nNA\nNA\n\n\n2007\n3.53\nVēsturiskie\nNA\nNA\nNA\n\n\n2008\n4.38\nVēsturiskie\nNA\nNA\nNA\n\n\n2009\n4.28\nVēsturiskie\nNA\nNA\nNA\n\n\n2010\n4.14\nVēsturiskie\nNA\nNA\nNA\n\n\n2011\n4.34\nVēsturiskie\nNA\nNA\nNA\n\n\n2012\n4.45\nVēsturiskie\nNA\nNA\nNA\n\n\n2013\n4.78\nVēsturiskie\nNA\nNA\nNA\n\n\n2014\n5.23\nVēsturiskie\nNA\nNA\nNA\n\n\n2015\n5.83\nVēsturiskie\nNA\nNA\nNA\n\n\n2016\n6.23\nVēsturiskie\nNA\nNA\nNA\n\n\n2017\n6.65\nVēsturiskie\nNA\nNA\nNA\n\n\n2018\n7.58\nVēsturiskie\nNA\nNA\nNA\n\n\n2019\n8.11\nVēsturiskie\nNA\nNA\nNA\n\n\n2020\n8.60\nVēsturiskie\nNA\nNA\nNA\n\n\n2021\n8.75\nVēsturiskie\nNA\nNA\nNA\n\n\n2022\n9.48\nVēsturiskie\nNA\nNA\nNA\n\n\n2023\n10.48\nVēsturiskie\nNA\nNA\nNA\n\n\n2024\nNA\nPrognoze\n10.00175\n8.803\n11.201\n\n\n2025\nNA\nPrognoze\n10.41361\n9.197\n11.630\n\n\n2026\nNA\nPrognoze\n10.82547\n9.589\n12.061\n\n\n2027\nNA\nPrognoze\n11.23733\n9.981\n12.494\n\n\n2028\nNA\nPrognoze\n11.64919\n10.371\n12.928\n\n\n\n\n\n[1] \"MAPE: 115.975612\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLineārā modeļa formula: y = -823.60 + 0.41 * x\n\n\nR-squared: 0.956"
  },
  {
    "objectID": "LRKPM.html#patstāvīgais-darbs-par-laika-rindu-klasiskiem-prognozēšanas-modeļiem",
    "href": "LRKPM.html#patstāvīgais-darbs-par-laika-rindu-klasiskiem-prognozēšanas-modeļiem",
    "title": "Laika rindas klasisaās prognozēšanas metodes",
    "section": "",
    "text": "Vienas stundas darbaspēka izmaksas pa darbības veidiem (eiro) 2005 - 2023\n\n\n\n\n\n\n\n\n\n\n\n\nGads\nIzmaksas\n\n\n\n\n2005\n2.19\n\n\n2006\n2.75\n\n\n2007\n3.53\n\n\n2008\n4.38\n\n\n2009\n4.28\n\n\n2010\n4.14\n\n\n2011\n4.34\n\n\n2012\n4.45\n\n\n2013\n4.78\n\n\n2014\n5.23\n\n\n2015\n5.83\n\n\n2016\n6.23\n\n\n2017\n6.65\n\n\n2018\n7.58\n\n\n2019\n8.11\n\n\n2020\n8.60\n\n\n2021\n8.75\n\n\n2022\n9.48\n\n\n2023\n10.48\n\n\n\n\n\nFigure 1: Sākotnējie dati\n\n\n\n\n\n \n\n\n\n\n\n\n\n\nFigure 2: Sākotnējie dati\n\n\n\n\n\n\nTrendu izpēte\n\n\n\n\n\nModelis\nFormula\nR²\n\n\n\n\nLineārais\ny = -823.6 + 0.41*x\n0.96\n\n\nLogaritmiskais\ny = -6303.54 + 829.33*log(x)\n0.96\n\n\nEksponenciālais\ny = exp(-147.28 + 0.07*x)\n0.95\n\n\nPakāpes\ny = exp(-1131.69 + 148.97*log(x))\n0.95"
  },
  {
    "objectID": "LRKPM.html#prognozes-veidošana",
    "href": "LRKPM.html#prognozes-veidošana",
    "title": "LR klasiskās prognozēšanas metodes",
    "section": "",
    "text": "Prognozēšanas intervāls ir konservatīvi - 5 gadi.\n\n\n\n\n\nGads\nIzmaksas\nDatu tips\nPrognoze\nLCL\nUCL\n\n\n\n\n2005\n2.19\nVēsturiskie\nNA\nNA\nNA\n\n\n2006\n2.75\nVēsturiskie\nNA\nNA\nNA\n\n\n2007\n3.53\nVēsturiskie\nNA\nNA\nNA\n\n\n2008\n4.38\nVēsturiskie\nNA\nNA\nNA\n\n\n2009\n4.28\nVēsturiskie\nNA\nNA\nNA\n\n\n2010\n4.14\nVēsturiskie\nNA\nNA\nNA\n\n\n2011\n4.34\nVēsturiskie\nNA\nNA\nNA\n\n\n2012\n4.45\nVēsturiskie\nNA\nNA\nNA\n\n\n2013\n4.78\nVēsturiskie\nNA\nNA\nNA\n\n\n2014\n5.23\nVēsturiskie\nNA\nNA\nNA\n\n\n2015\n5.83\nVēsturiskie\nNA\nNA\nNA\n\n\n2016\n6.23\nVēsturiskie\nNA\nNA\nNA\n\n\n2017\n6.65\nVēsturiskie\nNA\nNA\nNA\n\n\n2018\n7.58\nVēsturiskie\nNA\nNA\nNA\n\n\n2019\n8.11\nVēsturiskie\nNA\nNA\nNA\n\n\n2020\n8.60\nVēsturiskie\nNA\nNA\nNA\n\n\n2021\n8.75\nVēsturiskie\nNA\nNA\nNA\n\n\n2022\n9.48\nVēsturiskie\nNA\nNA\nNA\n\n\n2023\n10.48\nVēsturiskie\nNA\nNA\nNA\n\n\n2024\nNA\nPrognoze\n10.00175\n8.803\n11.201\n\n\n2025\nNA\nPrognoze\n10.41361\n9.197\n11.630\n\n\n2026\nNA\nPrognoze\n10.82547\n9.589\n12.061\n\n\n2027\nNA\nPrognoze\n11.23733\n9.981\n12.494\n\n\n2028\nNA\nPrognoze\n11.64919\n10.371\n12.928\n\n\n\n\n\n[1] \"MAPE: 115.975612\""
  },
  {
    "objectID": "LRKPM.html#sākotnējie-dati",
    "href": "LRKPM.html#sākotnējie-dati",
    "title": "LR klasiskās prognozēšanas metodes",
    "section": "",
    "text": "Vienas stundas darbaspēka izmaksas pa darbības veidiem (eiro) 2005 - 2023\n\n\n\n\n\n\n\n\n\nGads\nIzmaksas\n\n\n\n\n2005\n2.19\n\n\n2006\n2.75\n\n\n2007\n3.53\n\n\n2008\n4.38\n\n\n2009\n4.28\n\n\n2010\n4.14\n\n\n2011\n4.34\n\n\n2012\n4.45\n\n\n2013\n4.78\n\n\n2014\n5.23\n\n\n2015\n5.83\n\n\n2016\n6.23\n\n\n2017\n6.65\n\n\n2018\n7.58\n\n\n2019\n8.11\n\n\n2020\n8.60\n\n\n2021\n8.75\n\n\n2022\n9.48\n\n\n2023\n10.48\n\n\n\n\n\n \n\n\n\n\n\n\n\n[1] \"Vidējā alga : 5.883 eiro/st\"\n\n\n \n\n\n[1] \"Standartnovirze: 2.371\""
  },
  {
    "objectID": "LRKPM.html#trendu-izpēte",
    "href": "LRKPM.html#trendu-izpēte",
    "title": "LR klasiskās prognozēšanas metodes",
    "section": "",
    "text": "Pārbaudot visus lineārās regresijas modeļus, ir jāsaprot, cik labi modelis atbilst datiem – jo lielāks ir determinācijas koeficients (R²), jo labāk regresijas modelis atbilst tālākajai analīzei.\n\n\n\n\n\nModelis\nFormula\nR²\n\n\n\n\nLineārais\ny = -823.6 + 0.41*x\n0.96\n\n\nLogaritmiskais\ny = -6303.54 + 829.33*log(x)\n0.96\n\n\nEksponenciālais\ny = exp(-147.28 + 0.07*x)\n0.95\n\n\nPakāpes\ny = exp(-1131.69 + 148.97*log(x))\n0.95\n\n\n\n\n\nKā mēs neredzam būtisku atšķirību starp lineārā un logaritmiskā modeļa determinācijas koeficientiem, es izvēlējos lineāro modeli tālākai prognozēšanai."
  },
  {
    "objectID": "LRKPM.html#prognozes-vizualizēšana",
    "href": "LRKPM.html#prognozes-vizualizēšana",
    "title": "LR klasiskās prognozēšanas metodes",
    "section": "",
    "text": "Lineārā modeļa formula: y = -823.60 + 0.41 * x\n\n\nR-squared: 0.956"
  },
  {
    "objectID": "LRKPM.html#dinamiskā-vizualizācija",
    "href": "LRKPM.html#dinamiskā-vizualizācija",
    "title": "LR klasiskās prognozēšanas metodes",
    "section": "",
    "text": "# Patstāvīgais darbs par laika rindu klasiskiem prognozēšanas modeļiem\n# Ielādēt nepieciešamās bibliotēkas (nokomentēts, lai norādītu nepieciešamo)\n\nlibrary(forecast)\nlibrary(tidyverse)\nlibrary(ggrepel) \nlibrary(dygraphs)\nlibrary(tibble)\nlibrary(knitr)\nlibrary(xts)\n\n# Izveidojiet datu rāmi ar sākotnējiem datiem\ndarba_izmaksas &lt;- data.frame(\n  Gads = 2005:2023, # Gadu diapazons\n  Izmaksas = c(2.19, 2.75, 3.53, 4.38, 4.28, 4.14, 4.34, 4.45, 4.78,\n               5.23, 5.83, 6.23, 6.65, 7.58, 8.11, 8.60, 8.75, 9.48, 10.48),\n  Datu_tips = \"Vēsturiskie\",\n  Prognoze = NA,\n  LCL = NA,\n  UCL = NA\n)\n\n\n# Nodrošināt, ka kolonnas ir skaitliskas\ndarba_izmaksas$Gads &lt;- as.numeric(darba_izmaksas$Gads)\nsakuma_dati&lt;- tibble(darba_izmaksas)\n\n\n## Sākotnējie dati\n#(https://data.stat.gov.lv/pxweb/lv/OSP_PUB/START__EMP__DI__DIS/DIS010/)\n\n# Sākotnējo datu vizualizācija\nkable(sakuma_dati[c(\"Gads\", \"Izmaksas\")], col.names = c(\"Gads\", \"Izmaksas\"), align = \"l\")\nggplot(darba_izmaksas, aes(x = Gads)) +\n  labs(\n    title = \"Darbaspēka izmaksu vēsturiskie dati\",\n    x = \"Gads\", \n    y = \"Izmaksas (eiro/st)\", \n  ) +\n  geom_line(aes(y = Izmaksas, color = \"Vēsturiskie dati\"), linewidth = 1)\n## Trendu izpēte\n\n# Lineārais modelis\nlin_mod &lt;- lm(Izmaksas ~ Gads, data = darba_izmaksas)\n\n# Logaritmiskais modelis\nlog_mod &lt;- lm(Izmaksas ~ log(Gads), data = darba_izmaksas)\n\n# Eksponenciālais modelis\nexp_mod &lt;- lm(log(Izmaksas) ~ Gads, data = darba_izmaksas)\n\n# Pakāpes modelis\npower_mod &lt;- lm(log(Izmaksas) ~ log(Gads), data = darba_izmaksas)\n\n# Trendu attēlošanas Tabula ar modeļiem un R^2 vērtībām\ntrend_table &lt;- data.frame(\n  Modelis = c(\"Lineārais\", \"Logaritmiskais\", \"Eksponenciālais\", \"Pakāpes\"),\n  Formula = c(\n    paste0(\"y = \", round(coef(lin_mod)[1], 2), \" + \", round(coef(lin_mod)[2], 2), \"*x\"),\n    paste0(\"y = \", round(coef(log_mod)[1], 2), \" + \", round(coef(log_mod)[2], 2), \"*log(x)\"),\n    paste0(\"y = exp(\", round(coef(exp_mod)[1], 2), \" + \", round(coef(exp_mod)[2], 2), \"*x)\"),\n    paste0(\"y = exp(\", round(coef(power_mod)[1], 2), \" + \", round(coef(power_mod)[2], 2), \"*log(x))\")\n  ),\n  R2 = c(summary(lin_mod)$r.squared, \n         summary(log_mod)$r.squared, \n         summary(exp_mod)$r.squared, \n         summary(power_mod)$r.squared)\n)\n# Noapaļo R2 \ntrend_table$R2 &lt;- round(trend_table$R2, 2)\n\n# tabulas attēlošana\ntrend_table_tibble &lt;- tibble(trend_table)\nkable(trend_table_tibble, col.names = c(\"Modelis\", \"Formula\", \"R²\"), align = \"l\")\n\n\n## Prognozes veidošana\n# Prognoze nākamajiem 5 gadiem ar ticamības intervāliem\n# Izveidojam jaunu tabulu, priekš prognozes\nforecast_years &lt;- data.frame(\n  Gads = 2024:2028,\n  Prognoze = predict(lin_mod, newdata = data.frame(Gads = 2024:2028)),\n  Izmaksas = NA,\n  Datu_tips = \"Prognoze\"\n)\n\n# Papildināt ar ticamības intervāliem\nforecast_result &lt;- round(predict(lin_mod, newdata = data.frame(Gads = 2024:2028), interval = \"prediction\", level = 0.95), 3)\n\nforecast_years$LCL &lt;- round(forecast_result[, \"lwr\"], 3)\nforecast_years$UCL &lt;- round(forecast_result[, \"upr\"], 3)\n\n# Apvienot sākotnējos datus ar prognozi\npilns_datu_rāmis &lt;- rbind(darba_izmaksas, forecast_years)\n\n# Izvadīt pilno datu rāmi\npilns_datu_rāmis_tibble &lt;- tibble(pilns_datu_rāmis)\nkable(pilns_datu_rāmis_tibble, col.names = c(\"Gads\", \"Izmaksas\", \"Datu tips\", \"Prognoze\", \"LCL\", \"UCL\"), align = \"l\")\n\n## Prognozes vizualizēšana\n\n# Iegūt lineārā modeļa koeficientus\nintercept &lt;- coef(lin_mod)[1]\nslope &lt;- coef(lin_mod)[2]\n\n# Vizualizācija ar ggplot2\nggplot(pilns_datu_rāmis, aes(x = Gads)) +\n  # Ticamības intervāli\n  geom_ribbon(aes(ymin = LCL, ymax = UCL), alpha = 0.2, fill = \"blue\") +\n  \n  # Vēsturiskie dati līnija\n  geom_line(aes(y = Izmaksas, color = \"Vēsturiskie dati\"), size = 1) +\n  geom_point(aes(y = Izmaksas, color = \"Vēsturiskie dati\"), size = 2, shape = 16) +\n  \n  # Prognozes līnija\n  geom_line(aes(y = Prognoze, color = \"Prognoze\"), linetype = \"dashed\", size = 1) +\n  geom_point(aes(y = Prognoze, color = \"Prognoze\"), size = 2, shape = 17) +\n  \n  \n  # Līnijas stilizācija\n  scale_color_manual(\n    values = c(\"Vēsturiskie dati\" = \"#1F77B4\", \"Prognoze\" = \"#FF7F0E\"),\n    name = \"Datu tips\"\n  ) +\n  \n  # Virsraksts un etiķetes\n  labs(\n    title = \"Darbaspēka izmaksu vēsturiskie dati un prognoze\",\n    subtitle = bquote(bold(\"Lineārā modeļa formula:\") ~ italic(y) == .(round(intercept, 2)) + .(round(slope, 2)) * italic(x)),\n    x = \"Gads\", \n    y = \"Izmaksas (eiro)\", \n    caption = bquote(bold(\"R2:\") ~ .(round(summary(lin_mod)$r.squared, 3)))\n  ) +\n  \n  \n  # Tēma\n  theme_minimal() +\n  theme(\n    legend.position = \"bottom\",\n    plot.title = element_text(hjust = 0.5, face = \"bold\"),\n    plot.subtitle = element_text(hjust = 0.5),\n    panel.grid.minor = element_line(color = \"lightgray\", linetype = \"dotted\")\n  ) +\n  # Y ass sadalījums\n  scale_y_continuous(breaks = seq(1, 12, by = 1)) +\n  # X ass sadalījums\n  scale_x_continuous(breaks = seq(2005, 2028, by = 3))\n# Izvadīt papildus informāciju konsoles izvadē\ncat(sprintf(\"Lineārā modeļa formula: y = %.2f + %.2f * x\\n\", intercept, slope))\ncat(sprintf(\"R-squared: %.3f\\n\", summary(lin_mod)$r.squared))\n\n\n## Dinamiskā vizualizācija\n\ntime_series_data &lt;- xts(\n  pilns_datu_rāmis[, c(\"Izmaksas\", \"Prognoze\", \"LCL\", \"UCL\")],\n  order.by = as.Date(paste(pilns_datu_rāmis$Gads, \"-01-01\", sep = \"\"))  # Ensure Gads is treated as a Date\n)\n\n# izveidojam interaktīvu grafiku\ndygraph(time_series_data, main = \"Darbaspēka izmaksu vēsturiskie dati un prognoze\") %&gt;%\n  dySeries(\"LCL\", label = \"LCL\", color = \"blue\", strokeWidth = 1) %&gt;%\n  dySeries(\"Izmaksas\", label = \"Vēsturiskie dati\", color = \"#1F77B4\") %&gt;%\n  dySeries(\"UCL\", label = \"UCL\", color = \"blue\", strokeWidth = 1) %&gt;%\n  \n  # pievienojam prognozes datus\n  dySeries(\"Prognoze\", label = \"Prognoze\", color = \"#FF7F0E\", strokePattern = \"dashed\") %&gt;%\n  \n  # izmanām ašu informāciju\n  dyAxis(\"x\", label = \"Gads\") %&gt;%\n  dyAxis(\"y\", label = \"Izmaksas (eiro/st)\") %&gt;%\n  \n  # leģendas stilizācija\n  dyLegend(show = \"always\", hideOnMouseOut = FALSE) %&gt;%\n  dyOptions(\n    fillGraph = FALSE,\n    drawGrid = TRUE\n  )"
  },
  {
    "objectID": "regr.html",
    "href": "regr.html",
    "title": "LR prognozēšanu ar regresijas modeļiem",
    "section": "",
    "text": "Autors : Kirils Volobujevs\n\n\nVienas stundas darbaspēka izmaksas pa darbības veidiem (eiro) 2005 - 2023\nIekšzemes kopprodukts pavisam, uz vienu iedzīvotāju un uz vienu nodarbināto 1995 - 2023\n\n\n\nDarbaspēka izmaksas un IKP vērtības pēc gadiem\n\n\nyear\ndi_value\nikp_value\n\n\n\n\n2014\n5.23\n22791\n\n\n2015\n5.83\n23744\n\n\n2016\n6.23\n24498\n\n\n2017\n6.65\n26017\n\n\n2018\n7.58\n28153\n\n\n2019\n8.11\n29567\n\n\n2020\n8.60\n29224\n\n\n2021\n8.75\n32285\n\n\n2022\n9.48\n36104\n\n\n2023\n10.48\n39072\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# 2. Time Series Plots using ggplot2\n\n# DI Values Plot\nggplot(merged_data, aes(x = year, y = di_value)) +\n  geom_line(color = \"blue\", size = 1) +\n  geom_point(color = \"blue\") +\n  labs(title = \"DI Values Over Time\", x = \"Year\", y = \"DI Value\") +\n  theme_minimal()\n\n\n\n\n\n\n\n# IKP Values Plot\nggplot(merged_data, aes(x = year, y = ikp_value)) +\n  geom_line(color = \"red\", size = 1) +\n  geom_point(color = \"red\") +\n  labs(title = \"IKP Values Over Time\", x = \"Year\", y = \"IKP Value\") +\n  theme_minimal()\n\n\n\n\n\n\n\n# 3. Correlation and Regression\ncorrelation_result &lt;- cor(merged_data$di_value, merged_data$ikp_value)\nregression_model &lt;- lm(ikp_value ~ di_value, data = merged_data)\n\n# 4. Probability Plots using ggplot2\n\n# Normal Probability Plot\nggplot(data = data.frame(residuals = rstandard(regression_model)), aes(sample = residuals)) +\n  stat_qq() +\n  stat_qq_line(color = \"red\") +\n  labs(title = \"Normal Probability Plot\")\n\n\n\n\n\n\n\n# Density Plot for IKP values\nggplot(merged_data, aes(x = ikp_value)) +\n  geom_density(fill = \"lightblue\", alpha = 0.5) +\n  labs(title = \"Probability Density of IKP\", x = \"IKP Value\", y = \"Density\") +\n  theme_minimal()\n\n\n\n\n\n\n\n# 5. Forecasting with ggplot2\n\n# Forecast results using auto.arima\nts_data &lt;- ts(merged_data$ikp_value, start = min(merged_data$year))\nforecast_result &lt;- forecast(auto.arima(ts_data), h = 3, level = 95)\n\n# Prepare forecast data\nforecast_df &lt;- data.frame(\n  Year = c(merged_data$year, \n           (max(merged_data$year) + 1):(max(merged_data$year) + 3)),\n  Forecast = c(merged_data$ikp_value, forecast_result$mean),\n  Lower_CI = c(rep(NA, nrow(merged_data)), forecast_result$lower[,1]),\n  Upper_CI = c(rep(NA, nrow(merged_data)), forecast_result$upper[,1])\n)\n\n# Forecast Table\nkable(forecast_df, \n      caption = \"IKP Forecast with Confidence Intervals\", \n      format = \"pipe\") %&gt;%\n  kable_styling()\n\n\nIKP Forecast with Confidence Intervals\n\n\nYear\nForecast\nLower_CI\nUpper_CI\n\n\n\n\n2014\n22791\nNA\nNA\n\n\n2015\n23744\nNA\nNA\n\n\n2016\n24498\nNA\nNA\n\n\n2017\n26017\nNA\nNA\n\n\n2018\n28153\nNA\nNA\n\n\n2019\n29567\nNA\nNA\n\n\n2020\n29224\nNA\nNA\n\n\n2021\n32285\nNA\nNA\n\n\n2022\n36104\nNA\nNA\n\n\n2023\n39072\nNA\nNA\n\n\n2024\n40881\n38309.11\n43452.89\n\n\n2025\n42690\n39052.80\n46327.20\n\n\n2026\n44499\n40044.35\n48953.65\n\n\n\n\n\n\n# Forecast Plot using ggplot2\nggplot(forecast_df, aes(x = Year, y = Forecast)) +\n  geom_line(color = \"darkgreen\", size = 1) +\n  geom_point(color = \"darkgreen\") +\n  geom_ribbon(aes(ymin = Lower_CI, ymax = Upper_CI), fill = \"lightgreen\", alpha = 0.5) +\n  labs(title = \"IKP Forecast with 95% Confidence Interval\", x = \"Year\", y = \"IKP Value\") +\n  theme_minimal()\n\n\n\n\n\n\n\n# 6. Statistical Results\ncat(\"Correlation Coefficient:\", correlation_result, \"\\n\\n\")\n\nCorrelation Coefficient: 0.9723517 \n\n# Regression\nprint(\"Regression Summary:\")\n\n[1] \"Regression Summary:\"\n\nprint(summary(regression_model))\n\n\nCall:\nlm(formula = ikp_value ~ di_value, data = merged_data)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-2709.45  -516.89   -12.96  1004.41  1462.60 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)   5469.4     2053.8   2.663   0.0287 *  \ndi_value      3077.2      261.3  11.777 2.47e-06 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1329 on 8 degrees of freedom\nMultiple R-squared:  0.9455,    Adjusted R-squared:  0.9387 \nF-statistic: 138.7 on 1 and 8 DF,  p-value: 2.473e-06\n\n# ANOVA\nprint(\"\\nANOVA Results:\")\n\n[1] \"\\nANOVA Results:\"\n\nprint(anova(regression_model))\n\nAnalysis of Variance Table\n\nResponse: ikp_value\n          Df    Sum Sq   Mean Sq F value    Pr(&gt;F)    \ndi_value   1 244804419 244804419   138.7 2.473e-06 ***\nResiduals  8  14119688   1764961                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n# Load required libraries\nlibrary(stats)\nlibrary(forecast)\nlibrary(knitr)\nlibrary(kableExtra)\nlibrary(ggplot2)\n\n# Dataset\ndi &lt;- data.frame(\n  year = 2014:2023,\n  di_value = c(5.23, 5.83, 6.23, 6.65, 7.58, 8.11, 8.60, 8.75, 9.48, 10.48)\n)\n\nikp &lt;- data.frame(\n  year = 2014:2023,\n  ikp_value = c(22791, 23744, 24498, 26017, 28153, 29567, 29224, 32285, 36104, 39072)\n)\n\n# Merge data frames by year (IKP just for analysis, not included in forecast)\nmerged_data &lt;- merge(di, ikp, by = \"year\")\n\n# 1. Combine Time Series Plot for DI and IKP Values Over Time\nggplot() +\n  geom_line(data = merged_data, aes(x = year, y = di_value), color = \"blue\", size = 1, linetype = \"solid\") +\n  geom_point(data = merged_data, aes(x = year, y = di_value), color = \"blue\") +\n  labs(title = \"DI Values Over Time\", x = \"Year\", y = \"DI Value\") +\n  theme_minimal()\n\n\n\n\n\n\n\n# 2. Combine Probability Density Plots for DI and IKP Values\nggplot() +\n  geom_density(data = merged_data, aes(x = di_value), fill = \"blue\", alpha = 0.5) +\n  geom_density(data = merged_data, aes(x = ikp_value), fill = \"red\", alpha = 0.5) +\n  labs(title = \"Probability Density of DI and IKP Values\", x = \"Value\", y = \"Density\") +\n  theme_minimal()\n\n\n\n\n\n\n\n# 3. Correlation and Regression Analysis (DI vs IKP)\ncorrelation_result &lt;- cor(merged_data$di_value, merged_data$ikp_value)\nregression_model &lt;- lm(ikp_value ~ di_value, data = merged_data)\n\n# ANOVA for the regression model\nanova_result &lt;- anova(regression_model)\ncat(\"\\nANOVA Results for DI vs IKP regression:\\n\")\n\n\nANOVA Results for DI vs IKP regression:\n\nprint(anova_result)\n\nAnalysis of Variance Table\n\nResponse: ikp_value\n          Df    Sum Sq   Mean Sq F value    Pr(&gt;F)    \ndi_value   1 244804419 244804419   138.7 2.473e-06 ***\nResiduals  8  14119688   1764961                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n# 4. Forecasting DI with ARIMA Model\n# ARIMA model applied to DI data\nts_di &lt;- ts(merged_data$di_value, start = min(merged_data$year))\nforecast_di_result &lt;- forecast(auto.arima(ts_di), h = 3, level = 95)\n\n# Prepare forecast data for DI\nforecast_di_df &lt;- data.frame(\n  Year = c(merged_data$year, \n           (max(merged_data$year) + 1):(max(merged_data$year) + 3)),\n  Forecast_DI = c(merged_data$di_value, forecast_di_result$mean),\n  Lower_CI_DI = c(rep(NA, nrow(merged_data)), forecast_di_result$lower[,1]),\n  Upper_CI_DI = c(rep(NA, nrow(merged_data)), forecast_di_result$upper[,1])\n)\n\n# Forecast Table for DI\nkable(forecast_di_df, \n      caption = \"DI Forecast with Confidence Intervals\", \n      format = \"pipe\") %&gt;%\n  kable_styling()\n\n\nDI Forecast with Confidence Intervals\n\n\nYear\nForecast_DI\nLower_CI_DI\nUpper_CI_DI\n\n\n\n\n2014\n5.23000\nNA\nNA\n\n\n2015\n5.83000\nNA\nNA\n\n\n2016\n6.23000\nNA\nNA\n\n\n2017\n6.65000\nNA\nNA\n\n\n2018\n7.58000\nNA\nNA\n\n\n2019\n8.11000\nNA\nNA\n\n\n2020\n8.60000\nNA\nNA\n\n\n2021\n8.75000\nNA\nNA\n\n\n2022\n9.48000\nNA\nNA\n\n\n2023\n10.48000\nNA\nNA\n\n\n2024\n11.06333\n10.53778\n11.58889\n\n\n2025\n11.64667\n10.90342\n12.38992\n\n\n2026\n12.23000\n11.31971\n13.14029\n\n\n\n\n\n\n# 5. Forecast Plot for DI with UCL/LCL\nggplot(forecast_di_df, aes(x = Year)) +\n  geom_line(data = merged_data, aes(x = year, y = di_value), color = \"blue\", size = 1) +  # Original DI line\n  geom_point(data = merged_data, aes(x = year, y = di_value), color = \"blue\") +  # Original DI points\n  geom_line(aes(y = Forecast_DI), color = \"darkgreen\", size = 1) +  # Forecasted DI line\n  geom_point(aes(y = Forecast_DI), color = \"darkgreen\") +  # Forecasted DI points\n  geom_ribbon(aes(ymin = Lower_CI_DI, ymax = Upper_CI_DI), fill = \"lightgreen\", alpha = 0.5) +  # Confidence interval for DI\n  labs(title = \"DI Forecast with 95% Confidence Interval (UCL/LCL)\", x = \"Year\", y = \"DI Value\") +\n  theme_minimal()"
  },
  {
    "objectID": "regr.html#sākotnējie-dati",
    "href": "regr.html#sākotnējie-dati",
    "title": "LR prognozēšanu ar regresijas modeļiem",
    "section": "",
    "text": "Vienas stundas darbaspēka izmaksas pa darbības veidiem (eiro) 2005 - 2023\nIekšzemes kopprodukts pavisam, uz vienu iedzīvotāju un uz vienu nodarbināto 1995 - 2023\n\n\n\nDarbaspēka izmaksas un IKP vērtības pēc gadiem\n\n\nyear\ndi_value\nikp_value\n\n\n\n\n2014\n5.23\n22791\n\n\n2015\n5.83\n23744\n\n\n2016\n6.23\n24498\n\n\n2017\n6.65\n26017\n\n\n2018\n7.58\n28153\n\n\n2019\n8.11\n29567\n\n\n2020\n8.60\n29224\n\n\n2021\n8.75\n32285\n\n\n2022\n9.48\n36104\n\n\n2023\n10.48\n39072\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# 2. Time Series Plots using ggplot2\n\n# DI Values Plot\nggplot(merged_data, aes(x = year, y = di_value)) +\n  geom_line(color = \"blue\", size = 1) +\n  geom_point(color = \"blue\") +\n  labs(title = \"DI Values Over Time\", x = \"Year\", y = \"DI Value\") +\n  theme_minimal()\n\n\n\n\n\n\n\n# IKP Values Plot\nggplot(merged_data, aes(x = year, y = ikp_value)) +\n  geom_line(color = \"red\", size = 1) +\n  geom_point(color = \"red\") +\n  labs(title = \"IKP Values Over Time\", x = \"Year\", y = \"IKP Value\") +\n  theme_minimal()\n\n\n\n\n\n\n\n# 3. Correlation and Regression\ncorrelation_result &lt;- cor(merged_data$di_value, merged_data$ikp_value)\nregression_model &lt;- lm(ikp_value ~ di_value, data = merged_data)\n\n# 4. Probability Plots using ggplot2\n\n# Normal Probability Plot\nggplot(data = data.frame(residuals = rstandard(regression_model)), aes(sample = residuals)) +\n  stat_qq() +\n  stat_qq_line(color = \"red\") +\n  labs(title = \"Normal Probability Plot\")\n\n\n\n\n\n\n\n# Density Plot for IKP values\nggplot(merged_data, aes(x = ikp_value)) +\n  geom_density(fill = \"lightblue\", alpha = 0.5) +\n  labs(title = \"Probability Density of IKP\", x = \"IKP Value\", y = \"Density\") +\n  theme_minimal()\n\n\n\n\n\n\n\n# 5. Forecasting with ggplot2\n\n# Forecast results using auto.arima\nts_data &lt;- ts(merged_data$ikp_value, start = min(merged_data$year))\nforecast_result &lt;- forecast(auto.arima(ts_data), h = 3, level = 95)\n\n# Prepare forecast data\nforecast_df &lt;- data.frame(\n  Year = c(merged_data$year, \n           (max(merged_data$year) + 1):(max(merged_data$year) + 3)),\n  Forecast = c(merged_data$ikp_value, forecast_result$mean),\n  Lower_CI = c(rep(NA, nrow(merged_data)), forecast_result$lower[,1]),\n  Upper_CI = c(rep(NA, nrow(merged_data)), forecast_result$upper[,1])\n)\n\n# Forecast Table\nkable(forecast_df, \n      caption = \"IKP Forecast with Confidence Intervals\", \n      format = \"pipe\") %&gt;%\n  kable_styling()\n\n\nIKP Forecast with Confidence Intervals\n\n\nYear\nForecast\nLower_CI\nUpper_CI\n\n\n\n\n2014\n22791\nNA\nNA\n\n\n2015\n23744\nNA\nNA\n\n\n2016\n24498\nNA\nNA\n\n\n2017\n26017\nNA\nNA\n\n\n2018\n28153\nNA\nNA\n\n\n2019\n29567\nNA\nNA\n\n\n2020\n29224\nNA\nNA\n\n\n2021\n32285\nNA\nNA\n\n\n2022\n36104\nNA\nNA\n\n\n2023\n39072\nNA\nNA\n\n\n2024\n40881\n38309.11\n43452.89\n\n\n2025\n42690\n39052.80\n46327.20\n\n\n2026\n44499\n40044.35\n48953.65\n\n\n\n\n\n\n# Forecast Plot using ggplot2\nggplot(forecast_df, aes(x = Year, y = Forecast)) +\n  geom_line(color = \"darkgreen\", size = 1) +\n  geom_point(color = \"darkgreen\") +\n  geom_ribbon(aes(ymin = Lower_CI, ymax = Upper_CI), fill = \"lightgreen\", alpha = 0.5) +\n  labs(title = \"IKP Forecast with 95% Confidence Interval\", x = \"Year\", y = \"IKP Value\") +\n  theme_minimal()\n\n\n\n\n\n\n\n# 6. Statistical Results\ncat(\"Correlation Coefficient:\", correlation_result, \"\\n\\n\")\n\nCorrelation Coefficient: 0.9723517 \n\n# Regression\nprint(\"Regression Summary:\")\n\n[1] \"Regression Summary:\"\n\nprint(summary(regression_model))\n\n\nCall:\nlm(formula = ikp_value ~ di_value, data = merged_data)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-2709.45  -516.89   -12.96  1004.41  1462.60 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)   5469.4     2053.8   2.663   0.0287 *  \ndi_value      3077.2      261.3  11.777 2.47e-06 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1329 on 8 degrees of freedom\nMultiple R-squared:  0.9455,    Adjusted R-squared:  0.9387 \nF-statistic: 138.7 on 1 and 8 DF,  p-value: 2.473e-06\n\n# ANOVA\nprint(\"\\nANOVA Results:\")\n\n[1] \"\\nANOVA Results:\"\n\nprint(anova(regression_model))\n\nAnalysis of Variance Table\n\nResponse: ikp_value\n          Df    Sum Sq   Mean Sq F value    Pr(&gt;F)    \ndi_value   1 244804419 244804419   138.7 2.473e-06 ***\nResiduals  8  14119688   1764961                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n# Load required libraries\nlibrary(stats)\nlibrary(forecast)\nlibrary(knitr)\nlibrary(kableExtra)\nlibrary(ggplot2)\n\n# Dataset\ndi &lt;- data.frame(\n  year = 2014:2023,\n  di_value = c(5.23, 5.83, 6.23, 6.65, 7.58, 8.11, 8.60, 8.75, 9.48, 10.48)\n)\n\nikp &lt;- data.frame(\n  year = 2014:2023,\n  ikp_value = c(22791, 23744, 24498, 26017, 28153, 29567, 29224, 32285, 36104, 39072)\n)\n\n# Merge data frames by year (IKP just for analysis, not included in forecast)\nmerged_data &lt;- merge(di, ikp, by = \"year\")\n\n# 1. Combine Time Series Plot for DI and IKP Values Over Time\nggplot() +\n  geom_line(data = merged_data, aes(x = year, y = di_value), color = \"blue\", size = 1, linetype = \"solid\") +\n  geom_point(data = merged_data, aes(x = year, y = di_value), color = \"blue\") +\n  labs(title = \"DI Values Over Time\", x = \"Year\", y = \"DI Value\") +\n  theme_minimal()\n\n\n\n\n\n\n\n# 2. Combine Probability Density Plots for DI and IKP Values\nggplot() +\n  geom_density(data = merged_data, aes(x = di_value), fill = \"blue\", alpha = 0.5) +\n  geom_density(data = merged_data, aes(x = ikp_value), fill = \"red\", alpha = 0.5) +\n  labs(title = \"Probability Density of DI and IKP Values\", x = \"Value\", y = \"Density\") +\n  theme_minimal()\n\n\n\n\n\n\n\n# 3. Correlation and Regression Analysis (DI vs IKP)\ncorrelation_result &lt;- cor(merged_data$di_value, merged_data$ikp_value)\nregression_model &lt;- lm(ikp_value ~ di_value, data = merged_data)\n\n# ANOVA for the regression model\nanova_result &lt;- anova(regression_model)\ncat(\"\\nANOVA Results for DI vs IKP regression:\\n\")\n\n\nANOVA Results for DI vs IKP regression:\n\nprint(anova_result)\n\nAnalysis of Variance Table\n\nResponse: ikp_value\n          Df    Sum Sq   Mean Sq F value    Pr(&gt;F)    \ndi_value   1 244804419 244804419   138.7 2.473e-06 ***\nResiduals  8  14119688   1764961                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n# 4. Forecasting DI with ARIMA Model\n# ARIMA model applied to DI data\nts_di &lt;- ts(merged_data$di_value, start = min(merged_data$year))\nforecast_di_result &lt;- forecast(auto.arima(ts_di), h = 3, level = 95)\n\n# Prepare forecast data for DI\nforecast_di_df &lt;- data.frame(\n  Year = c(merged_data$year, \n           (max(merged_data$year) + 1):(max(merged_data$year) + 3)),\n  Forecast_DI = c(merged_data$di_value, forecast_di_result$mean),\n  Lower_CI_DI = c(rep(NA, nrow(merged_data)), forecast_di_result$lower[,1]),\n  Upper_CI_DI = c(rep(NA, nrow(merged_data)), forecast_di_result$upper[,1])\n)\n\n# Forecast Table for DI\nkable(forecast_di_df, \n      caption = \"DI Forecast with Confidence Intervals\", \n      format = \"pipe\") %&gt;%\n  kable_styling()\n\n\nDI Forecast with Confidence Intervals\n\n\nYear\nForecast_DI\nLower_CI_DI\nUpper_CI_DI\n\n\n\n\n2014\n5.23000\nNA\nNA\n\n\n2015\n5.83000\nNA\nNA\n\n\n2016\n6.23000\nNA\nNA\n\n\n2017\n6.65000\nNA\nNA\n\n\n2018\n7.58000\nNA\nNA\n\n\n2019\n8.11000\nNA\nNA\n\n\n2020\n8.60000\nNA\nNA\n\n\n2021\n8.75000\nNA\nNA\n\n\n2022\n9.48000\nNA\nNA\n\n\n2023\n10.48000\nNA\nNA\n\n\n2024\n11.06333\n10.53778\n11.58889\n\n\n2025\n11.64667\n10.90342\n12.38992\n\n\n2026\n12.23000\n11.31971\n13.14029\n\n\n\n\n\n\n# 5. Forecast Plot for DI with UCL/LCL\nggplot(forecast_di_df, aes(x = Year)) +\n  geom_line(data = merged_data, aes(x = year, y = di_value), color = \"blue\", size = 1) +  # Original DI line\n  geom_point(data = merged_data, aes(x = year, y = di_value), color = \"blue\") +  # Original DI points\n  geom_line(aes(y = Forecast_DI), color = \"darkgreen\", size = 1) +  # Forecasted DI line\n  geom_point(aes(y = Forecast_DI), color = \"darkgreen\") +  # Forecasted DI points\n  geom_ribbon(aes(ymin = Lower_CI_DI, ymax = Upper_CI_DI), fill = \"lightgreen\", alpha = 0.5) +  # Confidence interval for DI\n  labs(title = \"DI Forecast with 95% Confidence Interval (UCL/LCL)\", x = \"Year\", y = \"DI Value\") +\n  theme_minimal()"
  }
]